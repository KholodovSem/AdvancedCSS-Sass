/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* 
   !Default setup
*/

* {
  margin: 0;
  padding: 0;

  box-sizing: border-box;
}

/* html {

} */

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;

  /* 
    *Понадобится для реализации ленты
  */
  padding: 30px;
}

/* 
  *background-size:

  "cover" - Масштабирует картинку так, чтобы она максимально накрыла собой
  весь блок. Сохраняет пропорции.

  "containt" - Старается полностью заполнить контейнер с сохранением
  пропорций.
*/

.header {
  position: relative;
  height: 95vh;

  /* 
  Градиент поверх изображения с помощью свойства "background-image".
  В качестве значений градиет принимает цвета, а также напраления.
  Их можем комбинировать, как в примере ниже (to right bottom - в правый нижний угол )
  */

  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  /* 
    background-position: top;

    Для того, чтобы при масштабировании страницы,
    верхняя часть изображения всегда оставалась вверху страницы.
  */
  background-position: top;

  /* 
    clip-path - создаёт ограниченную область видимости.
    Части, которые находятся в ней будут видны, те которые находятся
    за ней, будут скрыты.

    !clippy - инструмент, который нам в этом может помочь
  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  /* Тут в качестве остчёта, берётся ширина и высота родителя */
  top: 40%;
  left: 50%;
  /* Тут в качестве остчёта, берётся ширина и высота элемента */
  transform: translate(-50%, -50%);

  text-align: center;
}

.heading-primary {
  margin-bottom: 50px;
  color: #fff;
  text-transform: uppercase;
  /* 
    *backface-visibility: 
    Определяет, видно ли заднюю грань элемента.
  */
  backface-visibility: hidden;
}

.primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation: 1s ease-out moveInLeft;
}

.primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: 1s ease-out moveInRight;
}

.btn:link,
.btn:visited {
  display: inline-block;
  position: relative;
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  border-radius: 30px;
  transition: all 300ms;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  color: #777;
  background-color: #fff;
}

/* 
  backward - один из типов заливки анимации
  применяет стартовые параметры анимации ещё до самой анимации.
*/
.btn-animated {
  animation: 700ms ease-out 750ms backwards moveInBottom;
}

.btn::after {
  content: "";
  display: inline-block;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  border-radius: 30px;
  transition: all 300ms;
}

.btn:hover::after {
  transform: scale(1.1);
  opacity: 0;
}

.btn-white::after {
  background-color: #fff;
}

/* 
  Animations
*/

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(100px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
